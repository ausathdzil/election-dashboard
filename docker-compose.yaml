services:
  db:
    image: postgis/postgis:17-3.5-alpine
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  prestart:
    image: '${DOCKER_IMAGE_BACKEND:-election-backend}:${TAG:-latest}'
    build:
      context: ./backend
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
    command: bash scripts/prestart.sh
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - PROJECT_NAME=${PROJECT_NAME:-Election Dashboard}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    volumes:
      - ./news_data.csv:/app/news_data.csv:ro
      - ./backend/sql:/app/sql:ro

  backend:
    image: '${DOCKER_IMAGE_BACKEND:-election-backend}:${TAG:-latest}'
    restart: always
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    ports:
      - '8000:8000'
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - PROJECT_NAME=${PROJECT_NAME:-Election Dashboard}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}

    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:8000/api/v1/utils/health-check/',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

    build:
      context: ./backend

volumes:
  app-db-data:
